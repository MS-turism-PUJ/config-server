spring:
  application:
    name: services
  datasource:
    url: "${SERVICES_DB_URL}"
    username: "${DB_USER}"
    password: "${DB_PASSWORD}"
    driver-class-name: org.postgresql.Driver
  jpa:
    generate-ddl: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
  cloud:
    stream:
      bindings:
        # https://docs.spring.io/spring-cloud-stream/reference/spring-cloud-stream/functional-binding-names.htm
        # Format: <method name>-<in or out>-<index>
        # receiveMessage: name of the method that receives the message
        # in: because is a consumer
        # 0: Index of the binding. This allows the same method to receive from multiple queues
        receiveMessage-in-0:
          destination: usersQueue
          # Group is necessary to ensure that this
          # consumer receives all messages sent while
          # it was offline
          group: services-group

server:
  # To avoid colliding with other apps in port 8080
  port: 8082

# App metadata
info:
  app:
    name: Services MS
    description: Services microservice for turism project
    version: 0.0.1-SNAPSHOT
  company:
    name: Turismo
    contact:
      email: support@turismo.com
      phone: +1234567890
  build:
    time: ${BUILD_TIME:2024-08-21T12:30:00Z}
